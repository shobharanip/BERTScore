import pandas as pd
from Translation_evaluator import TranslationEvaluator

INPUT_XLSX  = "/appdata/cortex/dev1/shob/your_input.xlsx"
OUTPUT_XLSX = "/appdata/cortex/dev1/shob/combined_translation_results.xlsx"

# 1) Read all sheets
all_sheets = pd.read_excel(INPUT_XLSX, sheet_name=None)

# 2) Pull out your translations DataFrame
orig = all_sheets["translations"].copy()

# 3) Run the evaluator on that sheet
#    (same forcing-to-str step as before, if needed)
evaluator = TranslationEvaluator()
evaluator._data = orig
evaluator.evaluate(
    prediction_cols=['base_madlad400_translation','base_helsinki_translation'],
    reference_col   ='en',
    metrics         =["BLEU","ChrF","ChrF++"],
    keep_cols       =None
)

# 4) Grab your detailed‐results
det = evaluator._detailed_results

# 5) Identify _only_ the metric columns (i.e. those not already in orig)
metrics_only = det.loc[:, det.columns.difference(orig.columns)]

# 6) Concatenate side‐by‐side
combined = pd.concat(
    [orig.reset_index(drop=True), metrics_only.reset_index(drop=True)],
    axis=1
)

# 7) Write out a single sheet with everything combined
with pd.ExcelWriter(OUTPUT_XLSX, engine="openpyxl") as writer:
    combined.to_excel(writer,
                      sheet_name="Combined Results",
                      index=False)
    # (optional) preserve your other sheets unchanged:
    for name, df in all_sheets.items():
        if name != "translations":
            df.to_excel(writer, sheet_name=name, index=False)

print("Wrote combined sheet →", OUTPUT_XLSX)